$(document).ready(function() {
  
  initBIP('Click to edit');
  
  $('.edit_experience').each(function()        { handleAjaxEdition($(this).attr('id')); });
  $('.edit_education').each(function()         { handleAjaxEdition($(this).attr('id')); });
  $('.edit_professionalSkill').each(function() { handleAjaxEdition($(this).attr('id')); });
  
  $('#edit_image').click(function()            { $('#image_button').click(); });
  $('#image_button').change(function()         { $('#image_form').submit(); });
});

/* OBJECT CREATION */
function handleAjaxCreation(model) {
  var partials = ['show_timeline', 'candidate']
  $('#new_'+model).bind('ajax:success', function(evt, data, status, xhr) { callRefresh(model, data, partials) })
	                .bind('ajax:error',   function(evt, xhr, status)       { $('#errors_new_'+model).html(buildErrorMessages(xhr)); });
}

/* OBJECT EDITION */
function handleAjaxEdition(form_id) {
  var partials = ['show_timeline', 'candidate']
  arrayId   = form_id.split('_');
  var model = arrayId[1];
  var id    = arrayId[2];
  $('#'+'show_'+model+'_'+id).click(function() { showForm(model, id, partials); });
  $('#'+form_id).bind('ajax:success', function(evt, data, status, xhr) { (xhr.responseText == 'destroy!') ? $('#'+model+'_'+id).remove() && refreshPartials(partials) : callRefresh(model, data, partials) })
	              .bind('ajax:error',   function(evt, xhr, status)       { $('#errors'+id).html(buildErrorMessages(xhr)); });	
}

/* SHOW/HIDE  FORMS */
function showForm(model, id, partials) {
  (typeof(id) == 'undefined') ? callNew(model, partials) : $('#edit_'+model+'_'+id).show(); $('#show_'+model+'_'+id).hide()
}
function hideForm(model, id) {
  (typeof(id) == 'undefined') ? $('#new_'+model).hide() && $('#link_add_'+model).show() : $('#edit_'+model+'_'+id).hide() && $('#show_'+model+'_'+id).show()
}

/* AJAX CALLS TO CONTROLLERS ACTIONS */
function callRefresh(model, data, partials) {
  $.ajax({
    url: 'refresh', type: 'POST', data: {model: model},
    success: function(data) { $('#'+model+'s').html(data); $('.edit_'+model).each(function() { handleAjaxEdition($(this).attr('id')); }); }
  })
  if (typeof(partials) != 'undefined') { refreshPartials(partials); }
}
function callNew(model, data, partials) {
  $.ajax({
  	url: '../'+model+'s/new',
  	success: function(data) { $('#new_'+model).html(data); $('#new_'+model).show(); $('#link_add_'+model).hide(); handleAjaxCreation(model); }
  })
  if (typeof(partials) != 'undefined') { refreshPartials(partials); }
}
function refreshPartials(partials) {
  $.each(partials, function(i) { $.ajax({ url: 'refresh', type: 'POST', data: {partial: partials[i]}, success: function(data) { $('#'+partials[i]).html(data); } }) } );
}

function buildErrorMessages(xhr) {
  try { errors = $.parseJSON(xhr.responseText); }
  catch(err) { errors = { message: 'JSON Error' }; }
  errorMessages = 'Error(s): '; for (error in errors) { errorMessages += error+' '+errors[error]+' '; } return errorMessages;
}